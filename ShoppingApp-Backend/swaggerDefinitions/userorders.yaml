swagger: "2.0"
info:
  version: "1.0.0"
  title: "Order API"
  description: "API for managing user orders"
paths:
  /userOrders/{user_id}:
    get:
      summary: Get all user orders
      tags:
        - User Orders
      parameters:
        - name: user_id
          in: path
          description: ID of the user whose cart to retrieve
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: A list of user orders
          schema:
            type: array
            items:
              $ref: "#/definitions/UserOrder"
    post:
      summary: Create a new user order
      tags:
        - User Orders
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/definitions/CreateUserOrderInput"
      responses:
        201:
          description: User order created successfully
        400:
          description: Bad request
    put:
      summary: Update an existing user order
      tags:
        - User Orders
      parameters:
        - in: path
          name: id
          description: ID of the user order to be updated
          required: true
          type: integer
        - in: body
          name: body
          description: Updated user order object
          required: true
          schema:
            $ref: "#/definitions/UpdateUserOrderInput"
      responses:
        200:
          description: User order updated successfully
        400:
          description: Bad request
        404:
          description: User order not found
    delete:
      summary: Delete a user order
      tags:
        - User Orders
      parameters:
        - in: path
          name: id
          description: ID of the user order to be deleted
          required: true
          type: integer
      responses:
        204:
          description: User order deleted successfully
        404:
          description: User order not found
definitions:
  UserOrder:
    type: object
    properties:
      order_id:
        type: integer
        format: int64
        example: 1
      user_id:
        type: integer
        example: 456
      status:
        type: string
        example: "pending"
      order_payment_type:
        type: string
        example: "credit_card"
      total_price:
        type: number
        format: float
        example: 100.00
      shipping_address:
        type: string
        example: "123 Main St, City, Country"
      billing_address:
        type: string
        example: "456 Secondary St, City, Country"
      payment_status:
        type: string
        example: "paid"
      delivery_status:
        type: string
        example: "shipped"
      order_notes:
        type: string
        example: "Please deliver between 9 am and 5 pm"
  CreateUserOrderInput:
    type: object
    properties:
      user_id:
        type: integer
        example: 456
      status:
        type: string
        example: "pending"
      order_payment_type:
        type: string
        example: "credit_card"
      total_price:
        type: number
        format: float
        example: 100.00
      shipping_address:
        type: string
        example: "123 Main St, City, Country"
      billing_address:
        type: string
        example: "456 Secondary St, City, Country"
      payment_status:
        type: string
        example: "paid"
      delivery_status:
        type: string
        example: "shipped"
      order_notes:
        type: string
        example: "Please deliver between 9 am and 5 pm"
      products:
        type: array
        items:
          $ref: "#/definitions/ProductInput"
  UpdateUserOrderInput:
    type: object
    properties:
      status:
        type: string
        example: "pending"
      order_payment_type:
        type: string
        example: "credit_card"
      total_price:
        type: number
        format: float
        example: 100.00
      shipping_address:
        type: string
        example: "123 Main St, City, Country"
      billing_address:
        type: string
        example: "456 Secondary St, City, Country"
      payment_status:
        type: string
        example: "paid"
      delivery_status:
        type: string
        example: "shipped"
      order_notes:
        type: string
        example: "Please deliver between 9 am and 5 pm"
      products:
        type: array
        items:
          $ref: "#/definitions/ProductInput"
  ProductInput:
    type: object
    properties:
      product_id:
        type: integer
        example: 123
      product_price:
        type: number
        format: float
        example: 50.00
      product_quantity:
        type: integer
        example: 2
