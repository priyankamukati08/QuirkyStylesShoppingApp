swagger: "2.0"
info:
  version: "1.0.0"
  title: "Order API"
  description: "API for managing user orders"
paths:
  /userOrders:
    post:
      summary: Create a new user order
      tags:
        - User Orders
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/definitions/CreateUserOrderInput"
      responses:
        201:
          description: User order created successfully
        400:
          description: Bad request
        500:
          description: Internal Server Error
  /userOrders/{user_id}:
    get:
      summary: Get all user orders
      tags:
        - User Orders
      parameters:
        - name: user_id
          in: path
          description: ID of the user whose orders to retrieve
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: A list of user orders
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/definitions/UserOrder"
          example:
            - order_id: 206
              user_id: 21
              status: "pending"
              order_payment_type: "credit_card"
              shipping_address: "123 Main St, City, Country"
              billing_address: "456 Secondary St, City, Country"
              payment_status: "paid"
              delivery_status: "shipped"
              order_notes: "Please deliver between 9 am and 5 pm"
              estimated_tax: 5.00
              order_price: 100.00
              total_order_price_with_tax: 105.00
              create_date: "2024-04-19T02:49:03.017Z"
              product_id: 1
              product_price: 50.00
              product_quantity: 2
              product_size: "large"
              product_image_url: "/productImages/menCategory/mendress1.jpeg"
              product_brand_name: "Nike"
              product_description: "Updated product description"
        404:
          description: User not found
        500:
          description: Internal Server Error

definitions:
  UserOrder:
    type: object
    properties:
      order_id:
        type: integer
        format: int64
        example: 1
      user_id:
        type: integer
        format: int64
        example: 21
      status:
        type: string
        example: "pending"
      order_payment_type:
        type: string
        example: "credit_card"
      shipping_address:
        type: string
        example: "123 Main St, City, Country"
      billing_address:
        type: string
        example: "456 Secondary St, City, Country"
      payment_status:
        type: string
        example: "paid"
      delivery_status:
        type: string
        example: "shipped"
      order_notes:
        type: string
        example: "Please deliver between 9 am and 5 pm"
      estimated_tax:
        type: number
        format: float
        example: 5.00
      order_price:
        type: number
        format: float
        example: 100.00
      total_order_price_with_tax:
        type: number
        format: float
        example: 105.00
      create_date:
        type: string
        format: date-time
      product_id:
        type: integer
        example: 1
      product_price:
        type: number
        format: float
        example: 50.00
      product_quantity:
        type: integer
        example: 2
      product_size:
        type: string
        example: "large"
      product_image_url:
        type: string
        example: "/productImages/menCategory/mendress1.jpeg"
      product_brand_name:
        type: string
        example: "Nike"
      product_description:
        type: string
        example: "Updated product description"

  CreateUserOrderInput:
    type: object
    required:
      - user_id
      - status
      - order_payment_type
      - shipping_address
      - billing_address
      - payment_status
      - delivery_status
      - products
    properties:
      user_id:
        type: integer
        example: 21
      status:
        type: string
        example: "pending"
      order_payment_type:
        type: string
        example: "credit_card"
      shipping_address:
        type: string
        example: "123 Main St, City, Country"
      billing_address:
        type: string
        example: "456 Secondary St, City, Country"
      payment_status:
        type: string
        example: "paid"
      delivery_status:
        type: string
        example: "shipped"
      order_notes:
        type: string
        example: "Please deliver between 9 am and 5 pm"
      estimated_tax:
        type: number
        format: float
        example: 5.00
      order_price:
        type: number
        format: float
        example: 100.00
      total_order_price_with_tax:
        type: number
        format: float
        example: 105.00
      products:
        type: array
        items:
          $ref: "#/definitions/ProductInput"
  UpdateUserOrderInput:
    type: object
    properties:
      status:
        type: string
        example: "pending"
      order_payment_type:
        type: string
        example: "credit_card"
      total_price:
        type: number
        format: float
        example: 100.00
      shipping_address:
        type: string
        example: "123 Main St, City, Country"
      billing_address:
        type: string
        example: "456 Secondary St, City, Country"
      payment_status:
        type: string
        example: "paid"
      delivery_status:
        type: string
        example: "shipped"
      order_notes:
        type: string
        example: "Please deliver between 9 am and 5 pm"
      products:
        type: array
        items:
          $ref: "#/definitions/ProductInput"
  ProductInput:
    type: object
    properties:
      product_id:
        type: integer
        example: 1
      product_price:
        type: number
        format: float
        example: 50.00
      product_quantity:
        type: integer
        example: 2
      product_size:
        type: string
        example: "large"
