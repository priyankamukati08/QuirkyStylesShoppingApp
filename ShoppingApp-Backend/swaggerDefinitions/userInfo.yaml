swagger: "2.0"
info:
  version: "1.0.0"
  title: "User Info API"
  description: "API for managing user information"
paths:
  /userInfo:
    post:
      summary: Create a new user information
      tags:
        - User's Info
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/definitions/UserInfoInput"
      responses:
        201:
          description: User's information created successfully
        400:
          description: Bad request - Invalid input
        500:
          description: Internal Server Error

  /userInfo/{userId}:
    get:
      summary: Get user information by ID
      tags:
        - User's Info
      parameters:
        - in: path
          name: userId
          description: ID of the user to retrieve information for
          required: true
          type: integer
      responses:
        200:
          description: User information retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/definitions/UserInfo"
              example:
                id: 1
                name: John Doe
                email: john@example.com
                phone_number: "1234567890"
                age: 30
                gender: male
                birthdate: "1990-01-01"
                user_type: user
        404:
          description: User not found
        500:
          description: Internal Server Error

    put:
      summary: Update user information by ID
      tags:
        - User's Info
      parameters:
        - in: path
          name: userId
          description: ID of the user to update information for
          required: true
          type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/definitions/UserInfoInput"
      responses:
        200:
          description: User information updated successfully
          content:
            application/json:
              schema:
                $ref: "#/definitions/UserInfo"
              example:
                id: 1
                name: John Doe
                email: john@example.com
                phone_number: "1234567890"
                age: 30
                gender: male
                birthdate: "1990-01-01"
                user_type: user
        400:
          description: Bad request - Invalid input
        404:
          description: User not found
        500:
          description: Internal Server Error

definitions:
  UserInfo:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 1
      fullName:
        type: string
        example: John Doe
      email:
        type: string
        example: john@example.com
      mobileNumber:
        type: string
        example: 1234567890
      age:
        type: integer
        example: 30
      gender:
        type: string
        example: male
      birthday:
        type: string
        format: date
        example: "1990-01-01"
      user_type:
        type: string
        example: user

  UserInfoInput:
    type: object
    properties:
      fullName:
        type: string
        example: John Doe
      email:
        type: string
        example: john@example.com
      mobileNumber:
        type: string
        example: 1234567890
      age:
        type: integer
        example: 30
      gender:
        type: string
        example: male
      birthday:
        type: string
        format: date
        example: "1990-01-01"
      user_type:
        type: string
        example: user
