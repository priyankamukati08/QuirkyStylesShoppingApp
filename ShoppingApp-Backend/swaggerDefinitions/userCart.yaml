swagger: "2.0"
info:
  version: "1.0.0"
  title: "Cart API"
  description: "API for managing user carts"

paths:
  /cart/{user_id}:
    get:
      summary: Get the user's cart by user ID
      tags:
        - User Carts
      parameters:
        - name: user_id
          in: path
          description: ID of the user whose cart to retrieve
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: User's cart retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/definitions/CartItem"
        404:
          description: User's cart not found or user ID not found
  /cart:
    post:
      summary: Add a new item to the user's cart
      tags:
        - User Carts
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/definitions/CartItem"
      responses:
        201:
          description: Item added to the cart successfully
        400:
          description: Bad request. Check your request body for any errors or missing fields.
        403:
          description: Forbidden. You do not have permission to access this resource.
        500:
          description: Internal server error. Please try again later or contact support.
  /carts/{id}:
    get:
      summary: Get a specific item in the user's cart by ID
      tags:
        - User Carts
      parameters:
        - name: id
          in: path
          description: ID of the item in the user's cart to retrieve
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: Item found in the user's cart
          content:
            application/json:
              schema:
                $ref: "#/definitions/CartItem"
        404:
          description: Item not found in the user's cart
    put:
      summary: Update a specific item in the user's cart by ID
      tags:
        - User Carts
      parameters:
        - name: id
          in: path
          description: ID of the item in the user's cart to update
          required: true
          type: integer
          format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/definitions/CartItem"
      responses:
        200:
          description: Item in the user's cart updated successfully
        404:
          description: Item not found in the user's cart
    delete:
      summary: Remove a specific item from the user's cart by ID
      tags:
        - User Carts
      parameters:
        - name: id
          in: path
          description: ID of the item in the user's cart to delete
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: Item removed from the user's cart successfully
        404:
          description: Item not found in the user's cart
definitions:
  CartItem:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 1
      product_id:
        type: integer
        format: int64
        example: 1
      user_id:
        type: integer
        format: int64
        example: 1
      product_quantity:
        type: integer
        format: int64
        example: 2
      product_size:
        type: string
        example: "M"
      create_date:
        type: string
        format: date-time
        example: "2023-07-25T05:36:24.983Z"
      update_date:
        type: string
        format: date-time
        example: "2023-08-15T10:20:30.456Z"
example:
  id: 1
  product_id: 1
  user_id: 1
  product_quantity: 2
  product_size: "M"
  create_date: "2023-07-25T05:36:24.983Z"
  update_date: "2023-08-15T10:20:30.456Z"
